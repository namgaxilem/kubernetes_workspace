kubectl create secret generic cacerts -n istio-system --from-file=./ca-cert.pem --from-file=./ca-key.pem --from-file=./root-cert.pem
kubectl create secret generic cacerts -n default --from-file=./ca.crt --from-file=./client1.key --from-file=./client1.crt
istioctl install --set profile=demo

kubectl exec -it api-gateway-6755cb8f86-95xz5 -n default -c api-gateway -- curl -i fleetman-webapp

kubectl exec "$(kubectl get pod -n foo -o jsonpath={.items..metadata.name})" -c istio-proxy -n foo 
-- openssl s_client -showcerts -connect httpbin.foo:8000 > httpbin-proxy-cert.txt

kubectl exec -it api-gateway-755754d87d-r6btc -n default -c api-gateway -- curl --cacert $CA_CERT --cert $CLIENT_CERT --key $CLIENT_KEY -i https://domain-ne.com:11088

kubectl exec -it api-gateway-6755cb8f86-95xz5 -n default -c api-gateway -- bash -c 'echo $CA_CERT'

curl --cacert ca.crt --cert client.crt --key client.key -i https://domain-ne.com:11088
curl --cacert ca.crt --cert client1.crt --key client1.key -i https://domain-ne.com:11088

kubectl exec -it api-gateway-6b767b4b8-6zmjz -n default -c api-gateway -- sh "sh /usr/test.sh"

printenv

echo $CA_CERT > ca.crt
echo $CLIENT_CERT > client.cert
echo $CLIENT_KEY > client.key